# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------

# [START gke_release_kubernetes_manifests_microservices_demo]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      nodeSelector:
        type: adservice
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/adservice:v0.4.0
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: adservice
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: adservice
  minReplicas: 1
  maxReplicas: 16
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     cloud.google.com/neg: '{"ingress":true}'
#     kubectl.kubernetes.io/last-applied-configuration: |
#       {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"istio-ingressgateway","install.operator.istio.io/owning-resource":"unknown","install.operator.istio.io/owning-resource-namespace":"istio-system","istio":"ingressgateway","istio.io/rev":"default","operator.istio.io/component":"IngressGateways","operator.istio.io/managed":"Reconcile","operator.istio.io/version":"1.15.1","release":"istio"},"name":"istio-ingressgateway","namespace":"istio-system"},"spec":{"ports":[{"name":"status-port","port":15021,"protocol":"TCP","targetPort":15021},{"name":"http2","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8443}],"selector":{"app":"istio-ingressgateway","istio":"ingressgateway"},"type":"LoadBalancer"}}
#   creationTimestamp: "2022-11-23T16:31:29Z"
#   finalizers:
#   - service.kubernetes.io/load-balancer-cleanup
#   labels:
#     app: istio-ingressgateway
#     install.operator.istio.io/owning-resource: unknown
#     install.operator.istio.io/owning-resource-namespace: istio-system
#     istio: ingressgateway
#     istio.io/rev: default
#     operator.istio.io/component: IngressGateways
#     operator.istio.io/managed: Reconcile
#     operator.istio.io/version: 1.15.1
#     release: istio
#   managedFields:
#   - apiVersion: v1
#     fieldsType: FieldsV1
#     fieldsV1:
#       f:metadata:
#         f:annotations:
#           f:kubectl.kubernetes.io/last-applied-configuration: {}
#         f:labels:
#           f:app: {}
#           f:install.operator.istio.io/owning-resource: {}
#           f:install.operator.istio.io/owning-resource-namespace: {}
#           f:istio: {}
#           f:istio.io/rev: {}
#           f:operator.istio.io/component: {}
#           f:operator.istio.io/managed: {}
#           f:operator.istio.io/version: {}
#           f:release: {}
#       f:spec:
#         f:ports:
#           k:{"port":80,"protocol":"TCP"}:
#             .: {}
#             f:name: {}
#             f:port: {}
#             f:protocol: {}
#             f:targetPort: {}
#           k:{"port":443,"protocol":"TCP"}:
#             .: {}
#             f:name: {}
#             f:port: {}
#             f:protocol: {}
#             f:targetPort: {}
#           k:{"port":15021,"protocol":"TCP"}:
#             .: {}
#             f:name: {}
#             f:port: {}
#             f:protocol: {}
#             f:targetPort: {}
#         f:selector: {}
#         f:type: {}
#     manager: istio-operator
#     operation: Apply
#     time: "2022-11-23T16:31:29Z"
#   - apiVersion: v1
#     fieldsType: FieldsV1
#     fieldsV1:
#       f:metadata:
#         f:finalizers:
#           .: {}
#           v:"service.kubernetes.io/load-balancer-cleanup": {}
#       f:status:
#         f:loadBalancer:
#           f:ingress: {}
#     manager: kube-controller-manager
#     operation: Update
#     subresource: status
#     time: "2022-11-23T16:32:07Z"
#   name: istio-ingressgateway
#   namespace: istio-system
#   resourceVersion: "25342"
#   uid: c18a0b92-a596-4bdd-8cc2-5d495e43fdc5
# spec:
#   allocateLoadBalancerNodePorts: true
#   clusterIP: 10.44.8.230
#   clusterIPs:
#   - 10.44.8.230
#   externalTrafficPolicy: Cluster
#   internalTrafficPolicy: Cluster
#   ipFamilies:
#   - IPv4
#   ipFamilyPolicy: SingleStack
#   ports:
#   - name: status-port
#     nodePort: 31501
#     port: 15021
#     protocol: TCP
#     targetPort: 15021
#   - name: http2
#     nodePort: 30425
#     port: 80
#     protocol: TCP
#     targetPort: 8080
#   - name: https
#     nodePort: 30080
#     port: 443
#     protocol: TCP
#     targetPort: 8443
#   - name: http
#     nodePort: 30001
#     port: 15000
#     protocol: TCP
#     targetPort: 9555
#   selector:
#     app: istio-ingressgateway
#     istio: ingressgateway
#   sessionAffinity: None
#   type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: adservice-service
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    protocol: TCP
    port: 9555
    targetPort: 9555
---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: adservice-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - name: adservice
      port:
        number: 15000
        protocol: GRPC
        name: adservice-gateway-https
      hosts:
      - "*"

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: adservice-virtual
spec:
  hosts:
   - "*"
  gateways:
   - adservice-gateway
  http:
  - match:
    route:
    - destination:
        port:
          number: 9555
        host: adservice-service
---
